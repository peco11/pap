# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: ci_lint_test_deploy_surge

on:
  push:
    branches: [develop]
jobs:
  lint:
    uses: webmappsrl/pap/.github/workflows/job_lint.yml@develop
  surge:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x' # Sostituisci con la versione di Node.js che usi
          cache: 'npm'
      - name: Create .env file
        run: |
          echo EMAIL = ${{ secrets.PAP_EMAIL }} >> .env
          echo PASSWORD = ${{ secrets.PAP_PASSWORD }} >> .env
      - name: Create theme directory
        run: |
          mkdir -p projects/pap/src/theme
      - name: Install Ionic CLI
        run: npm install -g @ionic/cli
      - run: npm install
      - name: Run Gulp ESA
        env:
          EMAIL: ${{ secrets.PAP_EMAIL }}
          PASSWORD: ${{ secrets.PAP_PASSWORD }}
        run: npx gulp surge-deploy --id 4
      - name: Deploy to esa.pap.surge.sh
        uses: dswistowski/surge-sh-action@v1
        with:
          domain: 'esa.pap.surge.sh'
          project: 'dist/pap'
          login: ${{ secrets.SURGE_EMAIL }}
          token: ${{ secrets.SURGE_TOKEN }}
      - name: Run Gulp ERSU
        env:
          EMAIL: ${{ secrets.PAP_EMAIL }}
          PASSWORD: ${{ secrets.PAP_PASSWORD }}
        run: npx gulp surge-deploy --id 1
      - name: Deploy to ersu.pap.surge.sh
        uses: dswistowski/surge-sh-action@v1
        with:
          domain: 'ersu.pap.surge.sh'
          project: 'dist/pap'
          login: ${{ secrets.SURGE_EMAIL }}
          token: ${{ secrets.SURGE_TOKEN }}
